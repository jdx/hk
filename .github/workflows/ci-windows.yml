name: ci-windows

on:
  workflow_dispatch:
  pull_request:
  push:
    tags: ["*"]
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MISE_EXPERIMENTAL: true
  MISE_DISABLE_TOOLS: hadolint,swiftlint,bun

jobs:
  windows-test:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: Swatinem/rust-cache@v2

      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          experimental: true

      - name: Install tools with mise
        shell: pwsh
        run: |
          # Install required tools via mise
          mise install
          mise list
          # Add mise shims to PATH so pkl is available for hk binary
          $misePath = "$env:USERPROFILE\AppData\Local\mise\shims"
          $env:PATH = "$misePath;$env:PATH"
          echo "PATH=$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build
        run: cargo build

      - name: Run Rust unit tests
        run: cargo test --all --all-features -- --skip test_read_file_not_found

      - name: Run Windows Pester tests
        shell: pwsh
        run: |
          Install-Module -Name Pester -Force -SkipPublisherCheck
          Import-Module Pester
          # Use local binary directly (mise not needed for local tests)
          $env:USE_MISE = "false"
          Invoke-Pester -Path "test\windows\hk.Tests.ps1" -Output Detailed
