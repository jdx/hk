name: ci

on:
  workflow_dispatch:
  pull_request:
  push:
    tags: ["*"]
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MISE_EXPERIMENTAL: true
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          #- ubuntu-24.04-arm
          - windows-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    steps:
      - run: brew install parallel
        if: ${{ matrix.os == 'macos-latest' }}
      - name: Set Windows environment
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          # Set MISE_DISABLE_TOOLS for Windows
          echo "MISE_DISABLE_TOOLS=hadolint,swiftlint,bun" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: Swatinem/rust-cache@v2
      - uses: jdx/mise-action@v2
      - run: mise x -- bun i
        if: ${{ matrix.os != 'windows-latest' }}
      - name: mise run ci
        if: ${{ matrix.os != 'windows-latest' }}
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: mise run ci
      - name: Windows tests
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          mise run build
          mise run test:cargo
          Install-Module -Name Pester -Force -SkipPublisherCheck
          Import-Module Pester
          Invoke-Pester -Path "test\windows\hk.Tests.ps1" -Output Detailed
  msrv:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: Swatinem/rust-cache@v2
      - uses: jdx/mise-action@v2
      - run: mise run msrv
  docs-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Check documentation sync
        run: ./scripts/check-docs-sync.sh
