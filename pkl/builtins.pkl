import "hk.pkl"

class CargoCheck extends hk.Step {
    glob = new { "**/*.rs" }
    run = "cargo check --all-features"
}

class CargoClippy extends hk.Step {
    glob = new { "**/*.rs" }
    run = "cargo clippy --all-features --allow-dirty --allow-staged"
}

class CargoClippyFix extends hk.Step {
    glob = new { "**/*.rs" }
    run = "cargo clippy --all-features --fix --allow-dirty --allow-staged"
    stage = new { "{{ globs }}" }
}

class CargoFmt extends hk.Step {
    glob = new { "**/*.rs" }
    run = "cargo fmt"
    stage = new { "{{ globs }}" }
}

class Eslint extends hk.Step {
    glob = new { "**/*.{js,jsx,ts,tsx}" }
    run = "eslint {{ files }}"
    run_all = "eslint ."
}

class EslintFix extends hk.Step {
    glob = new { "**/*.{js,jsx,ts,tsx}" }
    run = "eslint --fix {{ files }}"
    run_all = "eslint --fix ."
    stage = new { "{{ globs }}" }
}

class GoVet extends hk.Step {
    glob = new { "**/*.go" }
    run = "go vet {{ files }}"
    run_all = "go vet ."
}

class Jq extends hk.Step {
    glob = new { "**/*.json" }
    run = "jq . {{ files }}"
}

class JqFormat extends hk.Step {
    glob = new { "**/*.json" }
    run = "jq . {{ files }}"
    stage = new { "{{ globs }}" }
}

class Prettier extends hk.Step {
    glob = new { "**/*.{js,jsx,ts,tsx,css,scss,less,html,json,jsonc,yaml,markdown,markdown.mdx,graphql,handlebars,svelte,astro,htmlangular}" }
    run = "prettier --write {{ files }}"
    run_all = "prettier --write ."
    stage = new { "{{ globs }}" }
}

class Rubocop extends hk.Step {
    glob = new { "**/*.rb" }
    run = "rubocop --fix {{ files }}"
    run_all = "rubocop --fix ."
    stage = new { "{{ globs }}" }
}

class Rustfmt extends hk.Step {
    glob = new { "**/*.rs" }
    run = "rustfmt --edition 2024 {{ files }}"
    stage = new { "{{ globs }}" }
}

class Yq extends hk.Step {
    glob = new { "**/*.yaml" }
    run = "yq {{ files }}"
}

class YqFormat extends hk.Step {
    glob = new { "**/*.yaml" }
    run = "yq -iP {{ files }}"
    stage = new { "{{ globs }}" }
}
