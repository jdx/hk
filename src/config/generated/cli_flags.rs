// THIS FILE IS AUTO-GENERATED - DO NOT EDIT
// Generated by build.rs from settings.toml

#![allow(dead_code)]

use clap::Args;
use std::num::NonZero;
use std::path::PathBuf;

#[derive(Debug, Args, Default)]
pub struct GeneratedCliFlags {
    /// Run on all files instead of just staged files.
    #[clap(long, short = 'a')]
    pub all: Option<bool>,
    /// Run check command instead of fix command.
    #[clap(long, short = 'c')]
    pub check: Option<bool>,
    /// Glob patterns to exclude from processing (union across sources).
    #[clap(long, long = "exclude-glob", short = 'e')]
    pub exclude: Option<Vec<String>>,
    /// Abort execution on first failure.
    #[clap(long = "fail-fast", long = "no-fail-fast")]
    pub fail_fast: Option<bool>,
    /// Run fix command instead of check command.
    #[clap(long, short = 'f')]
    pub fix: Option<bool>,
    /// Start reference for checking files.
    #[clap(long = "from-ref")]
    pub from_ref: Option<String>,
    /// Run on files that match these glob patterns.
    #[clap(long, short = 'g')]
    pub glob: Option<Vec<String>>,
    /// Path to user configuration file.
    #[clap(long)]
    pub hkrc: Option<PathBuf>,
    /// Maximum number of parallel jobs to run. 0 means auto-detect.
    #[clap(long, short = 'j')]
    pub jobs: Option<usize>,
    /// Output in JSON format.
    #[clap(long)]
    pub json: Option<bool>,
    /// Disable progress output.
    #[clap(long = "no-progress")]
    pub no_progress: Option<bool>,
    /// Print the plan instead of executing.
    #[clap(long, short = 'P')]
    pub plan: Option<bool>,
    /// Profiles to enable/disable. Prefix with '!' to disable.
    #[clap(long = "profile", short = 'p')]
    pub profiles: Option<Vec<String>>,
    /// Suppress output.
    #[clap(long, short = 'q')]
    pub quiet: Option<bool>,
    /// Suppress all output.
    #[clap(long)]
    pub silent: Option<bool>,
    /// Skip specific steps across all hooks (union across sources).
    #[clap(long = "skip-step")]
    pub skip_steps: Option<Vec<String>>,
    /// Enable slow mode. Shorthand for --profile=slow.
    #[clap(long, short = 's')]
    pub slow: Option<bool>,
    /// Stash method to use for git hooks.
    #[clap(long)]
    pub stash: Option<String>,
    /// Run only specific step(s).
    #[clap(long, short = 'S')]
    pub step: Option<Vec<String>>,
    /// End reference for checking files.
    #[clap(long = "to-ref")]
    pub to_ref: Option<String>,
    /// Enable tracing spans and performance diagnostics.
    #[clap(long)]
    pub trace: Option<String>,
    /// Verbose output level.
    #[clap(long, short = 'v', action = clap::ArgAction::Count)]
    pub verbose: u8,
}
